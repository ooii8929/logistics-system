name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Set up Go
      uses: actions/setup-go@f0fff3c2e641cfe6d97fb3660e43cd053980afdb # v2.1.5
      with:
        go-version: 1.17

    - name: Checkout repository
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.2

    - name: Install golangci-lint
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.42.1

    - name: Download dependencies
      run: go mod download

    - name: Lint code
      run: golangci-lint run -v
  
  build-and-push:
    runs-on: ubuntu-latest
    environment: prod

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.4.2
      
    - name: Configure AWS credentials
      run: echo "Configuring AWS credentials"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1.4.0
      with:
        mask-password: true
        registry-type: private
        skip-logout: false

    - name: Build and push Docker image
      uses: docker/build-push-action@v2.10.0
      with:
        context: ./app
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/logistics-track:latest

    - name: Build and push Docker image for database
      uses: docker/build-push-action@v2.10.0
      with:
        context: ./app/mysql
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/logistics-database:latest
